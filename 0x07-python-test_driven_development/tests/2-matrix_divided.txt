The ``2-matrix_divided`` module
===============================

Test ``matrix_divided``
-----------------------

Import ``matrix_divided`` from ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

    Test :

        >>> matrix = [[1, 2, 3],[4, 5, 6]]
        >>> print(matrix_divided(matrix, 3))
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
        >>> print(matrix)
        [[1, 2, 3], [4, 5, 6]]

    Test case if list items is not integer or float:

        >>> matrix = [[1, 2, 3, "Hello"],[4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats.

    Test case if Each row of the matrix is not the same size:

        >>> matrix = [[1, 2, 3],[4, 5, 6, 7]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size.

    Test case if divisor is not number:

        >>> matrix_divided(matrix, 's')
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> matrix_divided(matrix, None)
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

    Test case if divisor equel zero:

        >>> matrix_divided(matrix, 0)
        Traceback (most recent call last):
        ...
        ZeroDivisionError: division by zero
